# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# NOTE(TheJulia): There is significant commonality between this playbook
# and the bifrost bootstrap process.
- name: "If VENV is set in the environment, enable installation into venv"
  set_fact:
    enable_venv: true
  when: lookup('env', 'VENV') | length > 0

- name: "Create an horizon service group"
  group:
    name: "horizon"

- name: "Create an horizon service user"
  user:
    name: "horizon"
    group: "horizon"

- name: "Ensure /etc/openstack-dashboard exists"
  file:
    name: "/etc/openstack-dashboard"
    state: directory
    owner: "horizon"
    group: "horizon"
    mode: 0755

- name: "Write horizon configuration from template"
  template:
    src: local_settings.j2
    dest: "/etc/openstack-dashboard/local_settings.py"
    owner: "horizon"
    group: "horizon"
    mode: 0644

- name: "Link horizon config"
  file:
    src: "/etc/openstack-dashboard/local_settings.py"
    dest: "/usr/local/lib/python2.7/dist-packages/openstack_dashboard/local/local_settings.py"
    state: link

- name: "Reserve horizon port"
  sysctl:
    name: "net.ipv4.ip_local_reserved_ports"
    value: 80
    sysctl_set: yes
    state: present
    reload: yes

- name: "Ensure /var/www/horizon exists"
  file:
    name: "/var/www/horizon"
    state: directory
    owner: "horizon"
    group: "{{ nginx_user }}" # TODO(TheJulia): Split webserver user/group.
    mode: 0755

- name: "Add horizon to web server group"
  user:
    name: "horizon"
    append: yes
    groups: "{{nginx_user}}" # TODO(TheJulia): Split webserver user/group.

- name: "Make folder for horizon logs"
  file:
    name: "/var/log/nginx/horizon"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}" # TODO(TheJulia): Split webserver user/group.
    mode: 0755

- name: "Enable Ironic UI"
  file:
    src: /usr/local/lib/python2.7/dist-packages/ironic_ui/enabled/_2200_ironic.py
    dest: /usr/local/lib/python2.7/dist-packages/openstack_dashboard/local/enabled/_2200_ironic.py
    state: link

- name: "Generate horizon.wsgi"
  command: "{{ horizon_git_folder }}/manage.py make_web_conf --pythonpath /usr/local/lib/python2.7/dist-packages --wsgi --force"

- name: "Collect static"
  command: "{{ horizon_git_folder }}/manage.py collectstatic --pythonpath /usr/local/lib/python2.7/dist-packages --noinput --clear"

- name: "Compress"
  command: "{{ horizon_git_folder }}/manage.py compress --pythonpath /usr/local/lib/python2.7/dist-packages --force"

- name: "Copy horizon.wsgi  to /var/www/horizon/horizon.wsgi"
  copy:
    remote_src: true
    src: /usr/local/lib/python2.7/dist-packages/openstack_dashboard/wsgi/horizon.wsgi
    dest: /var/www/horizon/horizon.wsgi

- name: "Ensure owner and mode of horizon.wsgi"
  file:
    path: /var/www/horizon/horizon.wsgi
    owner: "horizon"
    group: "{{nginx_user}}"
    mode: 0754

- name: "Place horizon uwsgi config"
  template:
    src: horizon.ini.j2
    dest: /etc/uwsgi/apps-available/horizon.ini
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}" # TODO(TheJulia): Split webserver user/group.
    mode: 0755

- name: "Enable horizon in uwsgi"
  file:
    src: "/etc/uwsgi/apps-available/horizon.ini"
    dest: "/etc/uwsgi/apps-enabled/horizon.ini"
    state: link

- name: "Place nginx configuration for horizon"
  # TODO(TheJulia): Refactor this so we use sites-enabled, but bifrost's
  # handling of co-existence needs to be cleaned up first.
  template:
    src: nginx_conf.d_bifrost-horizon.conf.j2
    dest: /etc/nginx/conf.d/bifrost-horizon.conf
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}" # TODO(TheJulia): Split webserver user/group.
    mode: 0755
